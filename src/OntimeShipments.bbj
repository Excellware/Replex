REM /**
REM  * OntimeShipments.bbj
REM  * @author len
REM  *
REM  */

use ::DTGrid.bbj::DTGrid
use ::DTButton.bbj::DTButton
use ::DTSession.bbj::DTSession
use ::DTPopup.bbj::DTPopup

class public OntimeShipments
  field private BBjString msg! = ""
  
  method public OntimeShipments(BBjNumber dateFrom, BBjNumber dateTo, BBjString custno$)
    call "CDS095", opt01, "opt01", "YNY", opt01$
    call "CDS095", opt11, "opt11", "YNY", opt11$
    call "CDS095", arm01, "arm01", "YNY", arm01$
    call "CDS095", ivm01, "ivm01", "YNY", ivm01$
    detail$ = "OTSRD"
    call "CDS095", otsrd, detail$, "YNYW", otsrd$
    summary$ = "OTSRS"
    call "CDS095", otsrs, summary$, "YNYW", otsrs$
    rows = 9
    dim lineitems[rows], value[rows]
    opt01s = unt
    dateFrom$ = date(dateFrom:"%Yl%Mz%Dz")
    dateTo$   = date(dateTo:  "%Yl%Mz%Dz")
    if len(custno$) = 6 then
      customer_name$ = "*** Not on File ***"
      read record (arm01, knum=0, key="01" + custno$, dom=*next)arm01$
    fi
    select (opt01s)opt01$ from "/u/CDI/RP/opt01" where opt01.firm_id$ = "01" and pos(" " <> opt01.ar_inv_no$) and opt01.shipmnt_date$ >= dateFrom$ and opt01.shipmnt_date$ <= dateTo$
    repeat
      read record (opt01s, end=*break)opt01$
      if len(custno$) = 6 and opt01.customer_id$ <> custno$ then continue
      opt11s = unt
      select (opt11s)opt11$ from "/u/CDI/RP/opt11" where opt11.firm_id$ = opt01.firm_id$ and opt11.ar_type$ = opt01.ar_type$ and opt11.customer_id$ = opt01.customer_id$ and opt11.ar_inv_no$ = opt01.ar_inv_no$ and pos(" " <> opt11.est_shp_date$) and opt11.ext_price > 0 and pos(opt11.line_code$ = "DRMIB") = 0
      repeat
        readrecord (opt11s, end=*break)opt11$
        otsrd.id = otsrd.id + 1
        call "CDS055", opt11.est_shp_date$, dat$[all]
        otsrd.estshipdate = num(dat$[2])
        call "CDS055", opt01.shipmnt_date$, dat$[all]
        otsrd.actshipdate = num(dat$[2])
        otsrd.invoiceno$ = opt11.ar_inv_no$
        otsrd.custno$ = opt01.customer_id$
        if len(custno$) <> 6 then
          redim arm01$
          read record (arm01, knum=0, key=opt01.firm_id$ + opt01.customer_id$, dom=*next)arm01$
          otsrd.customername$ = arm01.customer_name$
        fi
        otsrd.itemno$ = cvs(opt11.item_id$, 3)
        if opt11.line_code$ = "E" then
          otsrd.description$ = opt11.order_memo$
        else
          redim ivm01$
          read record (ivm01, knum=0, key=opt11.firm_id$ + opt11.item_id$, dom=*next)ivm01$
          otsrd.description$ = ivm01.item_desc$
        fi
        otsrd.dayslate = otsrd.actshipdate - otsrd.estshipdate
        otsrd.value = opt11.ext_price
        totalvalue = totalvalue + otsrd.value
        totallines = totallines + 1
        totaldays  = totaldays + max(0, otsrd.dayslate)
        writerecord (otsrd)otsrd$
        index = min(max(otsrd.dayslate, 0), 8)
        lineitems[index] = lineitems[index] + 1
        value[index]     = value[index]     + otsrd.value
      until 0
      close (opt11s)
    until 0
    close (opt01s)
    close (otsrd)
    if totallines = 0 then
      #msg! = "No shipments found for specified date range"
      methodret
    fi

    for row = 0 to rows
      otsrs.seq = row
      switch row
        case 0;        otsrs.dayslate$ = " -0"         ; break
        case rows - 1; otsrs.dayslate$ = "  8+"        ; break
        case rows;     otsrs.dayslate$ = "Total"       ; break
        case default;  otsrs.dayslate$ = str(row:"##0"); break
      swend
      otsrs.lineitems     = lineitems[row]
      otsrs.lineitemspct  = 100 * otsrs.lineitems / totallines
      if row < rows runninglines        = runninglines + otsrs.lineitems
      otsrs.lineitemsrpct = 100 * runninglines / totallines
      
      otsrs.value         = value[row]
      otsrs.valuepct      = 100 * otsrs.value / totalvalue
      if row < rows runningvalue        = runningvalue + otsrs.value
      otsrs.valuerpct     = 100 * runningvalue / totalvalue
      writerecord(otsrs)otsrs$
      lineitems[rows] = lineitems[rows] + lineitems[row]
      value[rows]     = value[rows]     + value[row]
    next row
    close (otsrs)

    declare DTJsonObject store!
    store! = new DTJsonObject()
    store!.put("dateFrom", dateFrom)
    store!.put("dateTo", dateTo)
    store!.put("custno", custno$)
    if len(custno$) = 6 then store!.put("custno_name", custno$ + " " + arm01.customer_name$)
    store!.put("detailFile", detail$)
    store!.put("summaryFile", summary$)
    store!.put("averageDays", str(round(totaldays / totallines, 1)))
    declare DTSession session!
    session! = DTSession.getSession()
    session!.setUserProperty("OntimeShipment", store!.toString(), BBjAPI.TRUE)
  methodend
  
  method public BBjString getErrMsg()
    methodret #msg!
  methodend

  method private static DTJsonObject getStore()
    declare DTSession    session!
    session! = DTSession.getSession()
    methodret new DTJsonObject(session!.getUserProperty("OntimeShipment").toString())
  methodend
  
  method public static void getReport(DTJsonObject store!, BBjString subtitle$, BBjString report$)
    declare DTGrid       grid!
    declare DTPopup      popup!
    switch report$
      case "D"
        grid! = new DTGrid("RP", "OTSRD.", "A", store!.getString("detailFile"))
        grid!.setKnum(1)
        name$ = "Detail"
        break
      case "S"
        grid! = new DTGrid("RP", "OTSRS.", "A", store!.getString("summaryFile"))
        grid!.setFooter("Average Days Late: " + store!.getString("averageDays"))
        name$ = "Summary"
        break
    swend
    if ! grid!.getErrMsg().isEmpty() then
      DTServletOut.addMsg("Unable to show report - " + grid!.getErrMsg())
      methodret
    fi
    popup! = new DTPopup("On Time Shipments " + name$ + " Report")
    popup!.deliver()

    grid!.setSubtitle(subtitle$)
    DTServletOut.addData(grid!.getFirstPage())
  methodend

  method public static void getPdf(DTJsonObject store!, BBjString subtitle$, BBjString report$)
    declare DTJsonObject action!
    switch report$
      case "D"
        rem  ToDo provide a way to obtain DISP$ from stored grid 
        if len(store!.getString("custno")) <> 6 then custdisp$ = "|CUSTNO|CUSTOMERNAME"
        disp$ = "DAYSLATE|ESTSHIPDATE|ACTSHIPDATE" + custdisp$ + "|INVOICENO|ITEMNO|DESCRIPTION|VALUE"
        y5$ = "On Time Shipments Detail"
        filename$ = store!.getString("detailFile")
        kno = 1
        break
      case "S"
        disp$ = "DAYSLATE|LINEITEMS|LINEITEMSPCT|LINEITEMSRPCT|VALUE|VALUEPCT|VALUERPCT"
        y5$ = "On Time Shipments Summary"
        filename$ = store!.getString("summaryFile")
        kno = 0
        break
    swend
    y5a$ = subtitle$
    call "CDS584", y6$, y5$
    fileout$ = y6.fileout$(pos("/tmp/" = y6.fileout$))
    call "CDS041", "CDS038", S038$, "YP"
    s038.keepOpen$ = "Y"
    call "CDS038", y$, y5$, y5a$, y6$, y6, l, p, s038$, filename$, kno, keybegin$, keyend$, disp$
    print (y6.ch)'lf', "Average Days Late: ", store!.getString("averageDays")
    call "CDS094", y6$, "e"
    
    call "SW005", "CD", "SM", sm00$      
    action! = new DTJsonObject()
    action!.put("type", "action")
    action!.put("url", cvs(sm00.httpname$, 2) + fileout$)
    action!.put("newPage", BBjAPI.TRUE)
    DTServletOut.addData(action!)
  methodend

  method public static void getSpreadsheet(DTJsonObject store!, BBjString subtitle$, BBjString report$)
    declare DTJsonObject action!
    call "CDS091", y$
    switch report$
      case "D"
        rem  ToDo provide a way to obtain DISP$ from stored grid
        if len(store!.getString("custno")) <> 6 then custdisp$ = "|CUSTNO|CUSTOMERNAME"
        disp$ = "DAYSLATE|ESTSHIPDATE|ACTSHIPDATE" + custdisp$ + "|INVOICENO|ITEMNO|DESCRIPTION|VALUE"
        y5$ = "On Time Shipments Detail"
        filename$ = store!.getString("detailFile")
        kno = 1
        break
      case "S"
        disp$ = "DAYSLATE|LINEITEMS|LINEITEMSPCT|LINEITEMSRPCT|VALUE|VALUEPCT|VALUERPCT"
        y5$ = "On Time Shipments Summary"
        filename$ = store!.getString("summaryFile")
        kno = 0
        break
    swend
    y5a$ = subtitle$
    
    call "CDS041", "CDS084", s084$, "YP"
    s084.mode$ = "N"
    s084.name$ = "PFIL"
    call "CDS041", "CDS038", s038$, "YP"
    s038.keepopen$ = "Y"
    call "CDS084", y$, y5$, u0, s084$, y6, y6$
    call "CDS038", y$, y5$, y5a$, y6$, y6, l, p, s038$, filename$, kno, keybegin$, keyend$, disp$
    print (y6.ch)""
    print (y6.ch)subtitle$
    close (y6.ch)
    call "SW005", "CD", "SM", sm00$      
    action! = new DTJsonObject()
    action!.put("type", "action")
    action!.put("url", cvs(sm00.httpname$, 2) + y6.fileout$(pos("/tmp/" = s084.fileout$)))
    action!.put("newPage", BBjAPI.TRUE)
    DTServletOut.addData(action!)
  methodend
  
  method public static void getReport(BBjString report$, BBjString output$)
    declare DTJsonObject store!
    store!    = #getStore()
    switch output$
      case "D"
        #getReport(store!, #getLongSubtitle(store!), report$)
        break
      case "P"
        #getPdf(store!, #getShortSubtitle(store!), report$)
        break
      case "S"
        #getSpreadsheet(store!, #getShortSubtitle(store!), report$)
        break
    swend 
  methodend

  method private static BBjString getLongSubtitle(DTJsonObject store!)
    out$ = "Orders Shipped from " + date(store!.getNumber("dateFrom"), "%Ml %D, %Yl") + " through " + date(store!.getNumber("dateTo"), "%Ml %D, %Yl") + "<br>"
    out$ = out$ + iff(len(store!.get("custno")) = 6, store!.getString("custno_name"), "All Customers")
    methodret out$
  methodend

  method private static BBjString getShortSubtitle(DTJsonObject store!)
    out$ = "Orders Shipped " + date(store!.getNumber("dateFrom")) + "-" + date(store!.getNumber("dateTo")) + " - "
    out$ = out$ + iff(len(store!.getString("custno")) = 6, store!.getString("custno_name"), "All Customers")
    methodret out$
  methodend

classend

