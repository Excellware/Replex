REM /**
REM  * PostGLToAddon.bbj
REM  * @author Len Krause, Excellware, Inc.
REM  * February 2020
REM  *
REM  * Called from Fick Office program ZI when a GL period is closed 
REM  *
REM **/

use java.util.HashMap

tmp$ = stbl("!ERROR_HANDLER", "/u/CDI/CD/bbj/CDS063.bbj")
REM setopts $080872202c2e$

enter period$

rem  Get Fick Bros to Addon journal id mapping
declare HashMap jidMap!
jidMap! = GL.buildJournalIdMap()

rem  Track last sequence for each journal
declare HashMap seq!
seq! = new HashMap()

rem  Determine latest copy of Addon data, Addon retains prior file versions until manually removed
pipe = unt
open (pipe)"|ls -d /u/addon/v?? | tail -1"
read (pipe)path$
close (pipe)
datapath$ = path$ + "/data/"; rem  /u/addon/v19/data/

open (pipe)"|ls -d " + path$ + "/v* | tail -1"
read (pipe)subpath$
close (pipe)

tpl_dev = unt
open (tpl_dev) subpath$ + "/barista/sys/data/ddm_table_tpls.dat"
read (tpl_dev, key=pad("GLE_JRNLHDR", 16)) *, *, gle01Tpl$
read (tpl_dev, key=pad("GLE_JRNLDET", 16)) *, *, gle11Tpl$
close (tpl_dev)

gl302Tpl$ = "key:c(17), fs1:c(1*), period:n(2), fs2:c(1*), journalno:n(5), fs3:c(1*), glacctno:c(6), fs4:c(1*), seq:c(4), fs5:c(1*), date:c(8), fs6:c(1*), amount:n(11*), desc:c(30*)"
dim gl302$:gl302Tpl$
gl302 = unt
open (gl302)"/u/fb/df/GL302"

dim gle01$:gle01Tpl$
gle01 = unt
open (gle01)datapath$ + "gle-01"

dim gle11$:gle11Tpl$
gle11 = unt
open (gle11)datapath$ + "gle-11"

read (gl302, key=period$, dom=*next)
repeat
  readrecord (gl302, end=*break)gl302$
  if gl302.key$(1,2) <> period$ break

  id$ = gl302.date$ + gl302.journalno$
  journal_id$ = pad(jidMap!.get(gl302.journalno$).toString(), 2)
  trans_id$   = pad(journal_id$ + gl302.date$(7,2) + gl302.date$(1,2) + gl302.date$(4,2), 10)

  if seq!.get(id$) = null() then gosub do_header

  redim gle11$
  gle11.firm_id$      = "01"
  gle11.journal_id$   = journal_id$
  gle11.je_trans_id$  = trans_id$
  line_no = num(seq!.get(id$)) + 1
  seq!.put(id$, line_no)
  gle11.line_no$ = str(line_no:"000")
  gle11.gl_account$ = pad(gl302.glacctno$, 10, "0")
  gle11.gl_post_memo$ = pad(gl302.desc$, 30)
  if gl302.amount >= 0 then
    gle11.debit_amt = gl302.amount
    gle11.credit_amt = 0
  else
    gle11.debit_amt = 0
    gle11.credit_amt = -gl302.amount
  fi
  gle11.units = 0
  gle11.batch_no$ = fill(7, "0")
  gle11.memo_1024$ = gl302.desc$
  writerecord(gle11)gle11$
until 0  
close (gl302)
close (gle01)
close (gle11)
exit
  
do_header:
  redim gle01$
  gle01.firm_id$      = "01"
  gle01.journal_id$   = journal_id$
  gle01.je_trans_id$  = trans_id$
  gle01.description$  = pad(gl302.desc$, 30)
  gle01.trans_date$   = "20" + gl302.date$(7,2) + gl302.date$(1,2) + gl302.date$(4,2)
  gle01.batch_no$     = fill(7, "0")
  writerecord (gle01)gle01$
  seq!.put(id$, 0)
return
  
class public GL
  method public static BBjString get_journalId(BBjString journalno$)
    declare HashMap journalIdMap!
    journalIdMap! = #getJournalIdMap()
    methodret journalIdMap!.get(journalno$).toString()
  methodend
  
  method public static HashMap getJournalIdMap()
    declare HashMap      map!
    declare BBjNamespace ns!
    nskey$ = "journalIdMap"
    ns! = BBjAPI().getGlobalNamespace()
    map! = cast(HashMap, ns!.getValue(nskey$), err=*next)
    if map! = null() then
      map! = #buildJournalIdMap()
      ns!.setValue(nskey$, map!)
    fi
    methodret map!
  methodend
  
  method public static HashMap buildJournalIdMap()
    declare HashMap map!
    map! = new HashMap()
    chan = unt
    open (chan)"/u/fb/df/GL305"
    repeat
      read (chan, end=*break)journalno$, *, id$
      map!.put(journalno$, id$)
    until 0
    close (chan)
    methodret map!
  methodend
  
classend