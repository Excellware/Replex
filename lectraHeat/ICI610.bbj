0001 REM IDENTIFICATION SECTION (LINES 1-99)
0010 REM "ICI610-ITEM INQUIRY 6.0
0020 REM "Copyright(c)1984-1997 Software Solutions, Inc. ALL RIGHTS RESERVED.
0025 REM "CREATED-11/14/88MIK
0030 REM REVISED-05/05/1997 - Richard Sheppard
0035 REM Rev 6.06.00 June Monthly
0050 SETESC 9710
0060 SETERR 9810
0080 REM THE FOLLOWING VARIABLES ARE SET IN THE MENU DRIVER AND ARE PASSED TO ALL PROGRAMS: NUMERIC -- Z(2)=2, Z(10)=22; ALPHANUMERIC -- A0$=COMPANY CODE, B0$=COMPANY NAME, C0$=SYSTEM CODES, Z7$=STRING OF 80 BLANKS
0085 REM Z=MAXIMUM LENGTH OF INPUT, Z(0)=HORIZONTAL POSITION AT WHICH INPUT BEGINS, Z(1)=VERTICAL POSITION AT WHICH INPUT BEGINS, Z(3)=NUMBER OF SPACES TO CLEAR AFTER INPUT, Z(3)=MANDATORY INPUT FLAG (0=ANY INPUT,1=SOME FORM MANDATED,2=INPUT LENGTH MUST EQUAL Z), Z(4)=PAD FLAG (0=NO PAD,1=PAD LEFT,2=PAD RIGHT), Z(5)=RING BELL FLAG (0=NO,1=YES), Z(6)=CHANGE MODE FLAG (0=NEW INPUT,1=CHANGE EXISTING INPUT), Z(7)=INPUT TYPE FLAG (0=STANDARD INPUT,1=F/M INPUT,2=3L ENTRY PROGRAM INPUT), Z(8)=ESCAPE FLAG (0=END PERMITTED,1=ABLE TO CONTINUE AFTER ESCAPE,2=NO ESCAPE PERMITTED), Z(9)=HELP MESSAGE NUMBER, Z(10)=LINE NUMBER FOR PRIMARY INPUT PROMPT, Z(11)=CTL VALUE, Z(12)=FLAG TO ENABLE ARROW KEYS TO TAKE ON SPECIFIC FUNCTIONS (0=DISABLED, 1=ENABLED)
0090 REM
0095 REM P$=PROGRAM NAME, X$=INPUT FROM DEVICE, Z$=PAD CHARACTER, Z0$=ASSOCIATED INPUT PROMPT, Z1$=PRIMARY INPUT PROMPT, Z2$=SECONDARY INPUT PROMPT, Z3$=INPUT DEFAULT VALUE, Z4$=VALID VALUE STRING, Z5$=DATE/PERIOD/NUMERIC MASK, Z6$=SKIP VALUE, Z7$=STRING OF BLANKS, Z8$=ERROR CODE
0099 REM

0100 REM INITIALIZATION SECTION (LINES 100-499): 110=DEFINE NUMERIC VARIABLES, 120=DEFINE ALPHANUMERIC VARIABLES, 130=DIMENSION VARIABLES, 150-190=FUNCTIONS
0110 LET B=21,L=0,M=5,N=18,S_R=0
0120 LET SYNC_CODE$="I",SYNC_PROMPT$=", F1-SYNC",B$='SCROLL'("OFF")+PAD("ARROW: UP=PREV ITEM, DOWN=NEXT ITEM, LEFT=PREV CODE, RIGHT=NEXT CODE",80)+'SCROLL'("ON"),P$="ICI610",X1$="  ",Y$="  ITEM INQUIRY",Y2$="  G PAW C P A I L TUN R U REPUO B PRT SEV M D "
0125 LET D$=CVS(DAY,3)
0130 DIM X9$(40,"-"),Y0$(80,"="),Y1$(20),X[5],Z7$(80)

0200 REM OPEN FILES: OPEN FILES ON LINE NUMBER=200+(CHANNEL*10) UNTIL CHANNELS 11,12,..., WHICH ARE OPENED ON LINES 291,292,...; CHANNEL 1 IS ALWAYS USED TO OPEN THE SYSTEM CONTROL FILE (SMCNTL); CHANNEL 10 IS RESERVED FOR THE PRINTER
0210 LET SMCNTL=1; OPEN (SMCNTL)"data/SM/SMCNTL"
0220 OPEN (10,ERR=0221)FID(0)
0230 REM FILES WILL BE OPENED WITH A GOSUB AT LINE 710

0300 REM "IOLISTS: IOLISTS FOR THE CHANNELS OPENED IN THE 200 BLOCK ARE CONTAINED IN THE 300 BLOCK, WITH THE LAST TWO DIGITS OF THE LINE NUMBERS CORRESPONDING (E.G., A FILE OPENED ON CHANNEL 6 (LINE 260) WILL DEFINE ITS IOLIST ON LINE 360); IF A FILE HAS MORE THAN ONE IOLIST DEFINED, SUBSEQUENT IOLISTS ARE FOUND ON THE NEXT SEQUENTIAL LINE NUMBER (E.G. 361,362); IF A PROGRAM HAS AN IOLIST FOR THE HEADER PORTION AND A DIFFERENT IOLIST FOR THE DETAIL PORTION, THE DETAIL IOLIST WILL BE ON THE NEXT SEQUENTIAL LINE NUMBER (E.G. CHANNEL 4 OPENED ON LINE 240, HEADER IOLIST ON LINE 340, DETAIL IOLIST ON LINE 341)
0320 IOLIST A0$,A7$,B7$,C7$,D7$,E7$,F7$,G7$,H7$,I7$,J7$,K7$,L7$,M7$,N7$,O7$,P7$,Q7$,R7$,S7$,T7$,U7$,V7$,W7$
0330 IOLIST A0$,W1$,A7$,A8$,B8$,C8$,D8$,E8$,F8$,G8$,H8$,I8$,J8$,K8$,L8$,M8$,N8$,O8$,P8$,Q8$,R8$

0500 REM GET NECESSARY CONTROL FILE INFORMATION
0510 FIND (SMCNTL,KEY="ICS"+A0$+"0000",DOM=9010)*,*,*,S1$,T1$,U1$; LET S1=NUM(S1$(8,1))
0520 FIND (SMCNTL,KEY="SMC"+A0$+"0000")*,*,*,*,*,I0,J0,*,*,M0$,P0,*,L0
0530 FIND (SMCNTL,KEY="GLQ"+A0$+"0000",DOM=9020)*,*,*,M1$,*,R1$
0540 FIND (SMCNTL,KEY="ICN"+A0$+"0000",DOM=9030)*,*,*,P1$; LET X=POS(P1$(1,4)=M1$(1,8),4); IF X<1 THEN LET Z$="MUST BE IN CURRENT OR NEXT GL PERIOD"; GOSUB 8810; GOTO 9900
0550 FIND (SMCNTL,KEY="SMT"+FID(0))*,*,*,*,*,*,*,*,W1T$; LET X3$=W1T$
0560 FIND (SMCNTL,KEY="ICW"+A0$+X3$+"00",DOM=9040)*,*,X3$,*,D1$
0570 FIND (SMCNTL,KEY="SOS"+A0$+"0000",DOM=9025)*,*,*,H1$,*,J1$
0580 LET SORDEC=UNT; OPEN (SORDEC,ERR=0581)"data/SO/SORDEC"; CLOSE (SORDEC); LET S_R=1

0600 REM SET PARAMETERS FROM CONTROL FILES AS NEEDED
0610 LET Y8$=T1$(1,9),X2$=T1$(19,11),Y4$=T1$(21,9),Y5$="-#"+T1$(20,10),Y6$=T1$(10,9),T1=NUM(T1$(40,1)),Y9$="#"+T1$(1,9),M1$=M1$(X)
0620 DIM Y3$(I0,"z")
0690 PRECISION T1

0700 REM
0710 GOSUB OPEN_FILES

0800 REM LINES 800-899 ARE RESERVED

1000 REM PROCESSING SECTION (LINES 1000-5999): 1000-1199=PRINT HEADER SCREEN, 1200-1399=INITIAL SETUP, 1400-1599=MAIN QUESTION, 1600-1699=PRINT DISPLAY CODES AND DISPLAY CODE QUESTION, 2000-2199=GO BACK TO DISPLAY CODES WITHOUT REOPENING CHANNELS, 2200-5990=PROCESSING OF DISPLAY CODE BLOCKS (STEPPED BY 200); CALLED INQUIRY VARIABLES: A=HORIZONTAL POSITION OF TITLE, B=VERTICAL POSITION OF TITLE, X0$=TITLE)

1100 REM PRINT HEADER SCREEN
1110 PRINT 'CS','SB',A0$,"-",B0$,@(28),"  ITEM INQUIRY",@(60),"CW",@(74),P$,@(61,1),"ALPHA",@(0,2),"ITEM",@(60,2),"VENDOR",@(61,3),"CLASS",@(0,M-1),'GS',FILL(80,"0"),'GE',@(0,19),'GS',FILL(80,"0"),'GE','SF',

1200 REM INITIAL SETUP
1210 READ (ICMAST,KEY=A0$,DOM=1211)
1220 LET K$=KEY(ICMAST,END=9015)
1230 IF K$(1,2)<>A0$ THEN GOTO 9015
1240 LET A7$=K$(3)
1250 LET F2=1

1400 REM MAIN QUESTION
1405 PRINT 'SCROLL'(0,0,80,M),'CF','SCROLL'(0,M,80,19-M),STBL("I"),'DEFAULT','CF','SCROLL'("RESET"),STBL("P"),'DEFAULT',@(0,20),'CE',
1410 LET Z=I0,Z[0]=5,Z[1]=2,Z[4]=J0,Z[9]=1,Z$=" ",Z1$="ENTER ITEM # TO DISPLAY (CR="+A7$+")"+FNIF$(NO_SYNC=0 AND IN_SYNC=0,SYNC_PROMPT$,"")+", F2-SEARCH",Z2$=", F4-END",Z3$=A7$
1420 GOSUB 8010; IF Z[11]=4 THEN GOTO 9900
1425 IF Z[11]=2 THEN LET X$="CATALOG"; GOSUB 8110; IF X$="" THEN GOTO 1410 ELSE PRINT @(Z[0],Z[1]),X$,
1430 LET TEMP$=X$
1435 IF Z[11]=1 AND NO_SYNC=0 AND IN_SYNC=0 THEN LET IN_SYNC=1; IF CVS(X1$,3)="" THEN LET X1$="G"+FILL(LEN(X1$)-1),A$=X1$,X$=X1$
1450 READ (ICMAST,KEY=A0$+TEMP$,DOM=1451)IOL=0320; GOTO 1470
1460 READ (ICINTR,KEY=A0$+TEMP$,DOM=1461)*,*,TEMP$; GOTO 1450
1465 FIND (ICICAT,KEY=A0$+TEMP$,KNUM=0,DOM=1495)IOL=ICICAT; GOSUB CATALOG_ITEM; GOTO 1400
1470 LET LINE_NO=0; FIND (ICIUOM,KEY=A0$+A7$+E7$(7,2),DOM=MISSING_UM)*,*,*,Y5$; LET Y5$=Y5$(1,1)+"#"+Y5$(2)
1480 IF CATALOG_SCREEN THEN GOSUB CLEAR_SCREEN
1490 GOTO 2031
1495 LET Z[5]=1; GOTO 1410

1600 REM PRINT DISPLAY CODES AND DISPLAY CODE QUESTION
1605 PRINT @(0,20),'SB',"GENERAL,PACKAGE,WHSE,COST,PRICE,ACTIVITY,INTERCHNG,LEDGER,TURNS,NOTES,RESTOCK",@(0,21),"USAGE,RECEIPTS,PURCH,ORDERS,BLANKETS,PRODUCT,TRANSFER,SERIAL,VENDOR,MSDS,DOT",@(0,20),'SF',"G",@(8,20),"PA",@(16,20),"W",@(21,20),"C",@(26,20),"P",@(32,20),"A",@(41,20),"I",@(51,20),"L",@(58,20),"TU",@(64,20),"N",@(70,20),"R",@(0,21),"U",@(6,21),"RE",@(15,21),"PU",@(21,21),"O",@(28,21),"B",@(37,21),"PR",@(45,21),"T",@(54,21),"SE",@(61,21),"V",@(68,21),"M",@(73,21),"D",@(A,B),X0$,@(0,23),STBL("BR"),B$,STBL("ER"),
1610 LET Z=2,Z[1]=22,Z[4]=2,Z[9]=2,Z[12]=1,Z$=" ",Z1$="ENTER DISPLAY CODE, CR-NEXT ITEM"+FNIF$(NO_SYNC=0,SYNC_PROMPT$,"")+", F3-SELECT WHSE",Z4$=Y2$,Z[0]=LEN(Z1$+Z2$)+1
1620 IF IN_SYNC THEN GOSUB SET_SYNC ELSE GOSUB 8010
1625 ON Z[11]-2 GOTO 1626,6000,1400,1626
1630 IF Z[11]=6 THEN LET X=(POS(X1$=Y2$(3),2)+1)/2; IF X<1 OR X+2>LEN(Y2$)/2 THEN LET X$=Y2$(3,2) ELSE LET X$=Y2$((X+2)*2-1,2)
1635 IF Z[11]=1 AND NO_SYNC=0 THEN LET IN_SYNC=(IN_SYNC=0); GOTO 1610
1640 IF Z[11]=9 THEN LET X=(POS(X1$=Y2$(3),2)-1)/2; IF X<1 THEN LET X$=Y2$(45,2) ELSE LET X$=Y2$(X*2+1,2)
1650 IF Z[11]=7 THEN LET X$="  " ELSE IF Z[11]=8 THEN LET X$="  "; GOTO 6500
1660 IF X$="C " OR X$="V " THEN IF POS(S1$(7,1)=C0$(4,10))=0 THEN GOTO 9085
1670 IF X$<>"  " THEN LET X1$=X$
1690 LET X1T$=A$,A$=X1$; ON (POS(X$=Y2$,2)+1)/2 GOTO 2000,2000,2200,2400,2600,2800,3000,3200,3400,3600,3800,4000,4200,4400,4600,4800,5000,5100,5200,5400,5600,5700,5800,5900

2000 REM GO BACK TO DISPLAY CODES WITHOUT REOPENING CHANNELS
2010 LET K$=KEY(ICMAST,END=2095)
2020 IF K$(1,2)<>A0$ THEN GOTO 2095
2030 READ (ICMAST)IOL=0320
2045 LET LINE_NO=1; FIND (ICIUOM,KEY=A0$+A7$+E7$(7,2),DOM=MISSING_UM)*,*,*,Y5$; LET Y5$=Y5$(1,1)+"#"+Y5$(2)
2050 PRINT 'SCROLL'(0,0,80,M),'CF','SCROLL'("RESET"),@(63,0),X3$,@(67,1),G7$,@(5,2),A7$," ",B7$(1,30),@(67,2),L7$,@(6+I0,3),B7$(31,30),@(67,3),C7$,
2070 IF O7$(6,1)="N" THEN PRINT @(15,1),"*INACTIVE*",
2090 ON (POS(X1$=Y2$,2)+1)/2 GOTO 1600,1600,2211,2411,2611,2811,3011,3211,3411,3611,3811,4011,4211,4411,4611,4811,2091,5111,5211,5411,5611,5711,5811,5911
2093 ON POS(X8$="E") GOTO 5011,5070
2095 PRINT @(0,N+2),'CE',; LET Z$="END OF FILE FOR THIS COMPANY"; GOSUB 8810; READ (ICMAST,KEY=A0$,DOM=2010)

2200 REM PROCESSING OF DISPLAY CODE BLOCKS
2205 REM GENERAL INFORMATION
2210 LET A=0,B=20,X0$="GENERAL"
2250 CALL "prog/IC/ICI611",M,APVEND,A$,X$,A0$,C7$,D7$,K7$,L7$,M7$,N7$,O7$,Q7$,S7$,T7$,V7$,SSI5$,Z8$; IF Z8$="" THEN GOTO 1600
2260 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 2250

2400 REM PACKAGE INFORMATION
2410 LET A=8,B=20,X0$="PACKAGE"
2450 CALL "prog/IC/ICI612",M,A0$,STR(A7$),STR(XT$),SMCNTL,ICMAST,ICIUOM,B$,Z[ALL],Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
2460 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 2450

2600 REM WAREHOUSE INFORMATION
2610 LET A=16,B=20,X0$="WHSE"
2650 CALL "prog/IC/ICI613",L,M,N,SMCNTL,ICMAST,ICWHSE,ICWHSX,ICIUOM,0,0,0,0,ARCUST,I0,Z[ALL],A$,B$,X$,A0$,A7$,B7$,L7$,A8$,B8$,D8$,E7$,E8$,O7$,W1$,X2$,D$,H1$,J1$,S1$,T1$,U1$,SSI5$,Z7$,Z8$,SSI1$,SSI2$,DLR1$,DLR2$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
2660 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 2650

2800 REM COST INFORMATION
2810 LET A=21,B=20,X0$="COST"
2850 CALL "prog/IC/ICI614",ICCOST,ICWHSE,ICWHSX,ICIUOM,L,M,N,I0,POS(S1$(11,1)="FO"),Z[ALL],A$,B$,X$,A0$,A7$,C8$,D1$,S1$,T1$,E7$,I7$,V7$,J9$,K9$,L9$,M9$,N7$,N9$,O9$,X3$,Y8$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
2860 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 2850

3000 REM PRICE INFORMATION
3010 LET A=26,B=20,X0$="PRICE"
3050 CALL "prog/IC/ICI615",0,0,ICIUOM,ICIUOM2,M,N,I0,Z[ALL],A$,B$,X$,A0$,A7$,E7$,I7$,V7$,C0$,S1$,T1$,U1$,SCREEN$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
3060 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 3050

3200 REM ACTIVITY INFORMATION
3210 LET A=32,B=20,X0$="ACTIVITY"
3250 CALL "prog/IC/ICI616",L,M,ICWHSE,ICWHSX,ICIUOM,I0,X2,X3,Z[ALL],A$,B$,X$,A0$,A7$,B8$,D1$,E7$,F8$,H8$,L8$,N7$,O7$,R8$,W1$,X2$,X3$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
3260 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 3250

3400 REM INTERCHANGE INFORMATION
3410 LET A=41,B=20,X0$="INTERCHNG"
3450 CALL "prog/IC/ICI617",ICINTR,ICINTX,L,M,N,I0,J0,Z[ALL],A$,B$,X$,A0$,A7$,B6$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
3460 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 3450

3600 REM LEDGERCARD INFORMATION
3610 LET A=51,B=20,X0$="LEDGER"
3650 CALL "prog/IC/ICI618",ICLEDG,ICWHSE,ICWHSX,L,M,N,I0,Z[ALL],A$,B$,X$,A0$,A7$,D8$,I4$,J4$,K4$,S1$,X3$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
3660 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 3650

3800 REM TURN INFORMATION
3810 LET A=58,B=20,X0$="TURNS"
3850 CALL "prog/IC/ICI629",L,M,ICWHSE,ICWHSX,X,I0,T1,Z[ALL],A$,B$,X$,A0$,A7$,D1$,E7$,J8$,M1$,R1$,R8$,X3$,Y5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
3860 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 3850

4000 REM NOTES INFORMATION
4010 LET A=64,B=20,X0$="NOTES"
4050 CALL "prog/IC/ICI619",ICNOTE,M,N,I0,Z[ALL],A$,B$,X$,A0$,A7$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
4060 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 4050

4200 REM RESTOCKING INFORMATION
4210 LET A=70,B=20,X0$="RESTOCK"
4250 CALL "prog/IC/ICI620",L,M,ICWHSE,ICWHSX,I0,Z[ALL],A$,B$,X$,A0$,A7$,E7$,D1$,D8$,G8$,X3$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
4260 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 4250

4400 REM USAGE INFORMATION
4410 LET A=0,B=21,X0$="USAGE"
4450 CALL "prog/IC/ICI621",L,M,ICWHSE,ICWHSX,I0,Z[ALL],A$,B$,X$,A0$,A7$,D1$,E7$,A8$,I8$,J8$,K8$,L8$,M1$,R1$,X3$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
4460 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 4450

4600 REM RECEIPTS INFORMATION
4610 LET A=6,B=21,X0$="RECEIPTS"
4650 CALL "prog/IC/ICI622",POPAST,ICWHSE,ICWHSX,L,M,I0,Z[ALL],A$,B$,X$,A0$,A7$,C0$,D1$,E7$,M0$,M8$,N8$,O8$,P8$,Q8$,S1$,X3$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
4660 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 4650

4800 REM PURCHASE ORDERS INFORMATION
4810 LET A=15,B=21,X0$="PURCH"
4850 CALL "prog/IC/ICI623",PORDER,POITMX,ICWHSE,ICWHSX,L,M,N,I0,Z[ALL],A$,B$,X$,A0$,A2$,A5$,A7$,C0$,C5$,E7$,G5$,H5$,M0$,S1$,S5$,U5$,W1$,X3$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
4860 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 4850

5000 REM SALES ORDERS INFORMATION
5001 IF M0$(16,1)+M0$(12,1)="YY" THEN GOSUB 6200; IF X8$="E" THEN GOTO 5070 ELSE GOTO 5005
5003 IF M0$(16,1)+M0$(12,1)="NY" THEN LET X8$="E"; GOTO 5070
5010 LET A=21,B=21,X0$="ORDERS"
5050 CALL "prog/IC/ICI624",SORDER,SOITMX,SOBOMS,SOBITX,L,M,N,I0,Z[ALL],A$,B$,X$,A0$,A2$,A3$,A5$,A7$,C5$,D3$,H5$,M0$,W1$,X3$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
5060 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 5050
5075 LET A=33,B=21,X0$="ORDERS"
5080 CALL "prog/IC/ICI640",ERCONT,ERCOIX,L,M,N,I0,Z[ALL],A$,B$,X$,A0$,A7$,E7$,M0$,X3$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
5090 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 5080

5100 REM BLANKET ORDERS
5110 LET A=28,B=21,X0$="BLANKETS"
5150 CALL "prog/SO/SOI750",SOBSOH,SOBSOL,ARCUST,M,N,19,Z[ALL],A$,B$,X$,A0$,B0$,C0$,"",A7$,X3$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
5160 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 5150

5200 REM PRODUCTION INFORMATION
5210 LET A=37,B=21,X0$="PRODUCT"
5250 CALL "prog/IC/ICI625",L,M,N,I0,Z[ALL],A$,B$,F$,L$,S$,X$,A0$,A7$,E1$,E7$,E9$,F1$,F9$,G1$,G9$,M0$,X3$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
5260 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 5250

5400 REM TRANSFERS INFORMATION
5410 LET A=45,B=21,X0$="TRANSFER"
5450 CALL "prog/IC/ICI626",ICTRAN,ICTRAX,ICWHSX,L,M,N,I0,Z[ALL],A$,B$,X$,A0$,A7$,D1$,E7$,F6$,H6$,I6$,J6$,L6$,M6$,W1$,X3$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
5460 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 5450

5600 REM SERIAL #/LOT # INFORMATION
5610 LET A=54,B=21,X0$="SERIAL"
5650 CALL "prog/IC/ICI627",ICLOTS,L,M,N,I0,Z[ALL],A$,B$,X$,A0$,A7$,C0$,O7$,S1$,S8$,T8$,U8$,W1$,X3$,Y0$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
5660 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 5650

5700 REM VENDORS INFORMATION
5710 LET A=61,B=21,X0$="VENDOR"
5750 CALL "prog/IC/ICI628",POVNIT,POVNIX,ICWHSX,APVEND,L,M,N,I0,J0,Z[ALL],A$,B$,X$,Z$,A0$,A2$,A6$,A7$,B6$,C0$,C6$,D1$,D6$,E6$,E7$,M0$,S1$,W1$,X3$,SSI5$,Z7$,Z8$; IF Z8$="" THEN ON Z[11]-4 GOTO 1600,1621
5760 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 5750

5800 REM "MSDS INFORMATION
5810 LET A=68,B=21,X0$="MSDS"
5850 CALL "prog/IC/ICI660",M,SOMSID,SOMSPR,A$,X$,A0$,R7$,SSI5$,Z7$,Z8$; IF Z8$="" THEN GOTO 1600
5860 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 5850

5900 REM "DOT INFORMATION
5910 LET A=73,B=21,X0$="DOT"
5950 CALL "prog/IC/ICI661",M,SODTCD,A$,X$,A0$,U7$,SSI5$,Z7$,Z8$; IF Z8$="" THEN GOTO 1600
5960 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 5950

6000 REM SUBROUTINE SECTION (LINES 6000-7999, IF NECESSARY): IF INQUIRY IS BY WAREHOUSE, LINES 6000-6099 IS THE CURRENT WAREHOUSE SUBROUTINE AND LINES 6100-6199 IS THE NEXT WAREHOUSE SUBROUTINE
6001 REM CHANGE CURRENT WAREHOUSE
6010 PRINT @(0,N+2),'CE','SB',"CURRENT WAREHOUSE ",'SF',X3$," ",D1$,
6020 LET X=2*POS("ALL"=X3$),Z=2,Z[0]=63,Z[1]=0,Z[4]=1,Z[9]=3,Z$="0",Z3$=X3$(1,2-X)+W1T$(1,X),Z1$="ENTER WAREHOUSE (CR="+Z3$+"), F1-NEXT, F2-SEARCH, F3=ALL"
6030 GOSUB 8010; ON Z[11] GOTO 6041,6100,6031,6040,6090
6035 IF Z[11]=2 THEN GOSUB WHSE_SEARCH; IF X$="" THEN GOTO 6000 ELSE GOTO 6050
6040 LET X3$="ALL",D1$=Z7$(1,30); GOTO 6090
6050 IF X$<>X3$ THEN READ (SMCNTL,KEY="ICW"+A0$+X$+"00",DOM=6095)*,*,X3$,*,D1$
6090 PRINT @(63,0),X3$," ",@(0,N+2),'CE',; LET X$="  "; ON Z[11]-3 GOTO 2090,1600
6095 LET Z[5]=1; GOTO 6020

6100 REM "NEXT
6105 LET X$=X3$+"00"; IF X3$="ALL" THEN LET X$=""
6110 READ (SMCNTL,KEY="ICW"+A0$+X$,DOM=6111)
6120 LET L$=KEY(SMCNTL,END=6195)
6130 IF L$(1,5)<>"ICW"+A0$ THEN GOTO 6195
6150 READ (SMCNTL)*,*,X3$,*,D1$
6190 GOTO 6090
6195 PRINT @(63,0),X3$," ",; LET Z$="END OF WAREHOUSES FOR THIS COMPANY"; GOSUB 8810; IF X$="" THEN GOTO 6000 ELSE LET X$=""; GOTO 6110

6200 REM
6210 LET Z=1,Z[0]=76,Z[1]=22,Z[9]=4,Z[12]=0,Z1$="DISPLAY ORDERS FROM SALES ORDERS OR FROM EQUIPMENT RENTAL? (S/E)",Z3$="S",Z4$="SE"
6220 PRINT @(0,20),'CL',@(0,21),'CL',@(0,23),'CL',; GOSUB 8010; IF Z[11]=4 THEN LET A$=X1T$,X1$=X1T$; EXITTO 1600 ELSE IF Z[11]>4 THEN EXITTO 1621
6240 LET X8$=X$,X$=A$
6290 RETURN

6500 REM "BACK ONE ITEM
6510 READ (ICMAST,KEY=A0$+A7$(1,I0-1)+CHR(ASC(A7$(I0,1))-1),DOM=6511)
6520 LET K$=KEYP(ICMAST,END=6595)
6530 IF K$(1,2)<>A0$ THEN GOTO 6595
6550 READ (ICMAST,KEY=K$)IOL=0320
6560 GOTO 2031
6595 PRINT @(0,N+2),'CE',; LET Z$="BEGINNING OF FILE FOR THIS COMPANY"; GOSUB 8810; READ (ICMAST,KEY=A0$+Y3$,DOM=6520)

8000 REM CALLED PROGRAM SECTION (LINES 8000-8999): 8010=INPUT ROUTINE, 8110-8799=SEARCHES AND SPECIAL PROGRAMS, 8810=MESSAGE ROUTINE
8010 CALL "prog/SM/SMC010",Z,Z[ALL],P$,X$,Z$,Z0$,Z1$,Z2$,Z3$,Z4$,Z5$,Z6$,Z7$,Z8$; IF Z8$="" THEN RETURN ELSE IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 8010
8011 RETURN

8100 REM ITEM ALPHA SEARCH
8110 PRINT @(Z[0],Z[1]),FILL(Z),; CALL "prog/IC/ICC010",7,1,0,ICMAST,0,ICINTR,I0,J0,Z[8],A0$,X$,Z7$,Z8$; IF Z8$="" THEN RETURN
8120 IF Z8$<>"SS" THEN GOTO 9900 ELSE ESCAPE; GOTO 8110

8200 SET_SYNC: REM
8210 CALL "prog/SM/SMC390",A0$,B0$,C0$,ICMAST,SMUSED,IN_SYNC,SYNC_CODE$,A2$,X$,SYNC_PROMPT$,Z,Z[ALL],Z$,Z1$,Z2$,Z3$,Z4$,Z5$,Z6$,Z7$,Z8$,P$
8230 IF Z8$="" THEN RETURN ELSE IF Z8$<>"SS" OR TCB(13) THEN GOTO 9900 ELSE ESCAPE; GOTO 8210

8300 WHSE_SEARCH: REM
8310 PRINT @(Z[0]+Z+1,Z[1]),FILL(Z); CALL "prog/IC/ICC040",M,Z[8],A0$,X$,Z7$,Z8$; IF Z8$="" THEN RETURN
8320 IF Z8$<>"SS" THEN EXITTO MENU ELSE ESCAPE; GOTO 8310

8800 REM
8810 CALL "prog/SM/SMC020",F2,Z$; RETURN
8950 REM 0 - (ADD_UM) 8950-8970

8955 ADD_UM: REM
8960 CALL "prog/IC/ICF915",CALLED_WINDOW,MAIN_WINDOW,DROP_WINDOW,A0$,B0$,C0$,STR(A7$),STR(ICMAST_B7$),STR(XT$),STR(ICMAST_E7$),STR(ICMAST_F7$),STR(ICMAST_O7$),STR(ICMAST_P7$),ICMAST_EXTRACTED,SMCNTL,ICMAST,ICIUOM,ICINTR,0,0,SMNAME,Z8$; IF Z8$="" THEN RETURN
8970 IF Z8$<>"SS" OR TCB(13)>0 THEN EXITTO MENU ELSE ESCAPE; GOTO ADD_UM
9000 REM ERROR PROCESSING SECTION (LINES 9000-9899) AND TERMINATING SECTION (LINES 9900-9999): 9000-9099=MESSAGE TEXT FOR USE IN THE MESSAGE ROUTINE, 9500-9590=LOCKED FILE ROUTINE, 9600-9690=FULL FILE ROUTINE, 9710-9730=SETESC ROUTINE, 9810=ERROR HANDLING ROUTINE, 9900=RUN APPROPRIATE TERMINATION PROGRAM, 9950-9989=RUN OVERLAY PROGRAMS IF APPLICABLE (STEPPED BY 10), 9990-9999=SAVE PROGRAM (9990=UPDATES THE REVISION DATE AT LINE 30, 9992=ALLOWS SAVE TO BE VISUALLY VERIFIED, 9995=SAVE PROGRAM, 9999=END); THE RECOMMENDED PROCEDURE FOR SAVING A PROGRAM IS 'GOTO 9990' AND 'RUN'
9010 LET Z$="MUST SET UP IC STATIC CONTROL FILE"; GOSUB 8810; GOTO 9900
9015 LET Z$="NO ITEMS ON FILE FOR THIS COMPANY"; GOSUB 8810; GOTO 9900
9020 LET Z$="MUST SET UP GL COMPANY PERIOD ENDING DATES"; GOSUB 8810; GOTO 9900
9025 LET Z$="MUST SET UP SO STATIC CONTROL FILE"; GOSUB 8810; GOTO 9900
9030 LET Z$="MUST SET UP IC NONSTATIC CONTROL FILE"; GOSUB 8810; GOTO 9900
9040 LET Z$="WAREHOUSE '"+X3$+"' IN TERMINAL F/M NOT ON FILE"; LET X3$="ALL"; GOSUB 8810; GOTO 0561

9050 MISSING_UM: LET XT$=E7$(7,2),Z$="'"+CVS(XT$,3)+"' NOT IN ITEM/UNIT OF MEASURE FILE. MUST SETUP"; GOSUB 8810; LET DROP_WINDOW=1; GOSUB ADD_UM; ON LINE_NO GOTO 1470,2045
9085 PRINT @(0,N+2),'CE',; LET Z$="MUST HAVE SECURITY TO ACCESS COST & VENDOR INFORMATION"; GOSUB 8810; GOTO 1600

9700 REM SETESC ROUTINE ('F4-END' AVAILABLE IN INQUIRIES)
9710 INPUT (0,ERR=9710,SIZ=3)@(0,22),"CR-CONTINUE, F4-END ",'CL','RB',Z8$:(""=9711,"SS"=9721)
9720 IF CTL=4 THEN LET Z8$="F4"; GOTO 9900 ELSE PRINT @(0,22),'CL',; RETURN
9730 ESCAPE; GOTO 9710

9800 REM ERROR HANDLING ROUTINE: TCB(5) STORES LINE NUMBER THAT ERROR OCCURRED AT
9810 CALL "prog/SM/SMC090",P$,TCB(5),Z8$; IF Z8$="" THEN RETRY ELSE IF Z8$="!!" THEN GOTO 9900 ELSE ESCAPE; GOTO 9810

9900 MENU: RUN "prog/SM/SMS100"

9990 SAVE: EXECUTE "30REM REVISED-"+DATE(0:"%Mz/%Dz/%Yl - ")+INFO(3,3)
9992 SETTRACE
9995 SAVE "prog/IC/ICI610"
9999 END

18010 REM 0 - (FNIF$ - immediate IF) 18010-18012
18012 DEF FNIF$(F_TEST,F_TRUE$,F_FALSE$)=F_TRUE$(1,LEN(F_TRUE$)*(F_TEST<>0))+F_FALSE$(1,LEN(F_FALSE$)*(F_TEST=0))

19000 REM
19010 ICICAT: IOLIST A0$,A7$,A2$,B7$,P7$,G7$,PRICE_UOM$,H7$,I7$,J7$,T4$,U4$,C7$,M7$,A6$,DATE$,USE_AS_LEVELS$,IPC$,LP$,SSI1$,SSI2$,SSI3$,SSI4$

20000 OPEN_FILES:
20010 LET ICMAST=UNT; OPEN (ICMAST)"data/IC/ICMAST"
20020 LET ICWHSE=UNT; OPEN (ICWHSE)"data/IC/ICWHSE"
20030 LET ICWHSX=UNT; OPEN (ICWHSX)"data/IC/ICWHSX"
20050 LET ICINTR=UNT; OPEN (ICINTR)"data/IC/ICINTR"
20070 LET SMUSED=UNT,NO_SYNC=1; OPEN (SMUSED,ERR=20071)"data/SM/SMUSED"; LET NO_SYNC=0
20100 LET ICLOTS=UNT; OPEN (ICLOTS)"data/IC/ICLOTS"
20110 LET ICIUOM=UNT; OPEN (ICIUOM)"data/IC/ICIUOM"
20115 LET ICIUOM2=UNT; OPEN (ICIUOM2)"data/IC/ICIUOM"
20120 LET SOBSOL=UNT; OPEN (SOBSOL)"data/SO/SOBSOL"
20130 LET SOBSOH=UNT; OPEN (SOBSOH)"data/SO/SOBSOH"
20140 LET APVEND=UNT; OPEN (APVEND)"data/AP/APVEND"
20150 LET ICICAT=UNT; OPEN (ICICAT)"data/IC/ICICAT"
20160 LET ICCOST=UNT; OPEN (ICCOST)"data/IC/ICCOST"
20170 LET ICINTX=UNT; OPEN (ICINTX)"data/IC/ICINTX"
20180 LET ICLEDG=UNT; OPEN (ICLEDG)"data/IC/ICLEDG"
20190 LET ICNOTE=UNT; OPEN (ICNOTE)"data/IC/ICNOTE"
20200 LET ICTRAN=UNT; OPEN (ICTRAN)"data/IC/ICTRAN"
20210 LET ICTRAX=UNT; OPEN (ICTRAX)"data/IC/ICTRAX"
20220 IF M0$(16,1)<>"Y" THEN GOTO 20300
20230 LET SORDER=UNT; OPEN (SORDER)"data/SO/SORDER"
20240 LET SOITMX=UNT; OPEN (SOITMX)"data/SO/SOITMX"
20250 LET SOBOMS=UNT; OPEN (SOBOMS)"data/SO/SOBOMS"
20260 LET SOBITX=UNT; OPEN (SOBITX)"data/SO/SOBITX"
20300 IF M0$(12,1)<>"Y" THEN GOTO 20400
20310 LET ERCONT=UNT; OPEN (ERCONT)"data/ER/ERCONT"
20320 LET ERCOIX=UNT; OPEN (ERCOIX)"data/ER/ERCOIX"
20400 LET SOMSID=UNT; OPEN (SOMSID)"data/SO/SOMSID"
20410 LET SOMSPR=UNT; OPEN (SOMSPR)"data/SO/SOMSPR"
20420 LET SODTCD=UNT; OPEN (SODTCD)"data/SO/SODTCD"
20430 IF M0$(10,1)<>"Y" THEN GOTO 20500
20440 LET POPAST=UNT; OPEN (POPAST)"data/PO/POPAST"
20450 LET PORDER=UNT; OPEN (PORDER)"data/PO/PORDER"
20460 LET POITMX=UNT; OPEN (POITMX)"data/PO/POITMX"
20470 LET POVNIT=UNT; OPEN (POVNIT)"data/PO/POVNIT"
20480 LET POVNIX=UNT; OPEN (POVNIX)"data/PO/POVNIX"
20590 RETURN

21000 CATALOG_ITEM:
21010 IF !(CATALOG_SCREEN) THEN GOSUB SHOW_CATALOG_SCREEN
21020 GOSUB SHOW_CATALOG_DATA
21030 LET Z=0,Z[1]=22,Z[4]=2,Z[9]=2,Z[12]=1,Z$=" ",Z1$="CR-NEXT CATALOG ITEM",Z2$=", F4-BACKUP",Z[0]=LEN(Z1$+Z2$)+1
21040 GOSUB 8010; IF Z[11]=4 THEN GOTO EXIT_CATALOG
21050 LET K$=KEY(ICICAT,END=CATALOG_END); IF K$(1,2)<>A0$ THEN GOTO CATALOG_END
21060 READ (ICICAT)IOL=ICICAT
21070 GOTO CATALOG_ITEM

21100 CATALOG_END:
21110 PRINT @(0,N+2),'CE',
21120 LET Z$="END OF FILE FOR THIS COMPANY"; GOSUB 8810
21130 READ (ICICAT,KEY=A0$,DOM=21131)
21140 LET K$=KEY(ICICAT,END=NO_CATALOG_ITEMS); IF K$(1,2)<>A0$ THEN GOTO NO_CATALOG_ITEMS
21150 READ (ICICAT)IOL=ICICAT
21160 GOTO CATALOG_ITEM

21170 NO_CATALOG_ITEMS:
21180 LET Z$="NO CATALOG ITEMS ON FILE FOR THIS COMPANY"; GOSUB 8810

21200 EXIT_CATALOG:
21290 RETURN

22000 SHOW_CATALOG_SCREEN:
22005 PRINT @(0,M-1),'SB','GS',FILL(80,"0"),'GE',@(30,M-1),"CATALOG INFORMATION",
22010 PRINT 'SCROLL'(0,M,80,19-M),STBL("I"),'DEFAULT','CS','SCROLL'("RESET"),
22030 PRINT 'SB',@(7,6),"VENDOR",@(8,7),"CLASS",@(2,8),"PRICE CLASS",@(7,9),"WEIGHT",@(3,10),"PRICING UM",@(2,11),"INTERCHANGE",@(5,12),"STD PACK",@(2,13),"VENDOR-ITEM",@(4,14),"LIST PRICE",@(2,15),"MANUAL COST",@(4,16),"STD PRICE",@(55,6),"PRICE LEVEL 1",@(55,7),"PRICE LEVEL 2",@(55,8),"PRICE LEVEL 3",@(55,9),"PRICE LEVEL 4",@(55,10),"PRICE LEVEL 5",@(55,11),"PRICE LEVEL 6",@(51,12),"QTY BREAK LEVEL 1",@(51,13),"QTY BREAK LEVEL 2",@(51,14),"QTY BREAK LEVEL 3",@(51,15),"QTY BREAK LEVEL 4",@(51,16),"QTY BREAK LEVEL 5",@(51,17),"QTY BREAK LEVEL 6",'SF',
22070 LET CATALOG_SCREEN=1
22080 PRINT STBL("P"),'DEFAULT',
22090 RETURN

22100 SHOW_CATALOG_DATA:
22110 PRINT 'SCROLL'(0,0,80,M),'CF','SCROLL'("RESET"),@(63,0),X3$,@(67,1),G7$,@(5,2),A7$," ",B7$(1,30),@(67,2),A2$,@(6+I0,3),B7$(31,30),@(67,3),C7$,
22115 PRINT STBL("I"),'DEFAULT',
22120 PRINT @(14,6),A2$,@(14,7),C7$,@(14,8),IPC$,@(14,9),P7$,@(14,10),PRICE_UOM$,@(14,11),A6$,@(14,12),H7$,@(14,13),M7$,@(14,14),LP$,@(14,15),I7$,@(14,16),J7$,@(69,6),T4$(1,9),@(69,7),T4$(10,9),@(69,8),T4$(19,9),@(69,9),T4$(28,9),@(69,10),T4$(37,9),@(69,11),T4$(46,9),@(69,12),U4$(1,7),@(69,13),U4$(8,7),@(69,14),U4$(15,7),@(69,15),U4$(22,7),@(69,16),U4$(29,7),@(69,17),U4$(36,7),
22140 PRINT STBL("P"),'DEFAULT',
22190 RETURN

22200 CLEAR_SCREEN:
22210 PRINT 'SB',@(0,M-1),'GS',FILL(80,"0"),'GE',STBL("I"),'DEFAULT','SCROLL'(0,M,80,19-M),'CS','SCROLL'("RESET"),'SF',STBL("P"),'DEFAULT',
22220 LET CATALOG_SCREEN=0
22230 LET X1$="  ",X0$=""
22290 RETURN
